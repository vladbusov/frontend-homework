'use strict';

QUnit.module('Тестируем функцию anagram', function () {
	QUnit.test('Функция работает правильно', function (assert) {
		const input = [
			'кот', 'пила', 'барокко',
			'стоп', 'ток', 'кошка',
			'липа', 'коробка', 'пост'
		];

		const output = [
			['барокко', 'коробка'],
			['кот', 'ток'],
			['липа', 'пила'],
			['пост', 'стоп']
		];

		assert.deepEqual(anagram(input), output);
	});
	QUnit.test('Функция бракует одинаковые слова', function (assert) {
		const input = [
			'кит','тик', 'печать', 'печать'
		];

		const output = [
			['кит', 'тик']
		];

		assert.deepEqual(anagram(input), output, "'кит','тик', 'печать', 'печать' => ['кит', 'тик'] ");
	});
	QUnit.test('Функция работает правильно с большими массивами', function (assert) {
		const input = [
			'кавалерист','апельсин', 'акварелист', 
			'спаниель','канонада','листовка',
			'анаконда','вокалист','уклон',
			'кулон', 'колун', 'клоун',
			'спираль','прятки','тряпки',
			'раки', 'икар', 'икра',
			'ирак', 'каир'
		];

		const output = [
			  [
				"акварелист",
				"кавалерист"
			  ],
			  [
				"анаконда",
				"канонада"
			  ],
			  [
				"апельсин",
				"спаниель"
			  ],
			  [
				"вокалист",
				"листовка"
			  ],
			  [
				"икар",
				"икра",
				"ирак",
				"каир",
				"раки"
			  ],
			  [
				"клоун",
				"колун",
				"кулон",
				"уклон"
			  ],
			  [
				"прятки",
				"тряпки"
			  ]
		];

		assert.deepEqual(anagram(input), output, " верный ответ");
	});
		QUnit.test('Функция нормально работает с заглавными буквами', function (assert) {
		const input = [
			'Атлант','талант', 'тантал', 'октан'
		];

		const output = [
			  [
				"атлант",
				"талант",
				"тантал"
			  ]
		];

		assert.deepEqual(anagram(input), output);
	});
});
